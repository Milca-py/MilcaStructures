from milcapy import SystemModel

model = SystemModel()
model.add_material("concreto", 2.2*10**7, 0.3, 10)
model.add_rectangular_section("sec1", "concreto", 0.3, 0.4)
model.add_rectangular_section("sec2", "concreto", 0.3, 0.5)
model.add_node(1, 0, 1.2)
model.add_node(2, 0, 4.7)
model.add_node(3, 6, 4.7)
model.add_node(4, 6, 0.0)
model.add_member(1, 1, 2, "sec1")
model.add_member(2, 2, 3, "sec2")
model.add_member(3, 4, 3, "sec1")
model.add_restraint(1, *(True, True, True))
model.add_restraint(4, *(True, True, False))
model.add_load_pattern("CargasDistribuidas")
model.add_distributed_load(1, "CargasDistribuidas", 0, -15)
model.add_distributed_load(2, "CargasDistribuidas", -10, 20)
model.add_distributed_load(3, "CargasDistribuidas", 10, 20)
model.add_load_pattern("CargasPuntuales")
model.add_point_load(2, "CargasPuntuales", fx=20)
model.add_point_load(3, "CargasPuntuales", fx=-20, mz=-10)
# model.add_end_length_offset(2, 0.5, 0.5, False, False, 0.5, 0.5)
model.add_load_pattern("Aentamientos")
model.add_prescribed_dof(4, "Aentamientos", uy=-0.1)
model.add_load_pattern("PesoPropio")
model.add_self_weight("PesoPropio", 1)
model.solve()
model.plotter_options.mod_krz_rotation_angle = 180
model.plotter_options.mod_scale_point_load = 1
model.show()